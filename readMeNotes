Based on approach in Java Jugtours:
https://developer.okta.com/blog/2018/07/19/simple-crud-react-and-spring-boot


BASIC SPRING SECURITY MYSQL TUTORIAL:
https://www.youtube.com/watch?v=TNt3GHuayXs

----------------------------------
RESEARCH
  
- security research / links
- microservices links:
  https://www.udemy.com/course/spring-boot-microservices-with-spring-cloud-beginner-to-guru/

----------------------------------
Mon 30th Sept, Thurs-Fri 3rd/4th Oct
==> Tues + Wed in Oxford
==> TEAM PROJECT
==> RP

-----------------------------------
RP JOBS:

- backend methods tested with postman  (resume from basket controller)
- implement transactions and test in service tests
  [exception handling needs to be in the controllers]
- test rewriting controllers as JSON handlers


- service, integration and controller test POC
==> research java microservices
==> react bank docs and full gui structure

- poc handling errors as recommended in Controllers and React
- add in basic front end for basket and making a purchase
  --> basket handling, contact details, purchase, sale confirmation 
  --> apply mosh style error handling in front end
  --> overview of react unit tests  
- design admin flow and define security policy for system
- develop admin and member areas (keep it simple)
- apply security

----------------------------------

http://localhost:8080/
http://localhost:8080/home

http://localhost:8080/user
http://localhost:8080/admin*

http://localhost:8080/error


INTERNAL REACT APP:
react-routeplanner-app

- db: new_routeplanner_shopping
 - create table user (id bigint, active boolean, password varchar(50), roles varchar(50), user_name varchar(50) );
 
 
 ==========================================
 SETUP DATA (consider putting USER  and contact details inserts into data.sql....?)
 
 INSERT USERS
 insert into user values (1, 1, 'pass', 'ROLE_USER', 'user'); 
 insert into user values (2, 1, 'pass', 'ROLE_ADMIN', 'admin');
 
 INSERT ROUTE_QUERY DATA
 insert into route_query values(1, 'Farringdon', 'Oxford Circus', 1);

INSERT TICKETS AND REGISTER THESE IN A BASKET 
 insert into ticket values(1, 3, 1, 'dest1', 4, 'start1', 2, '2019-10-04' );
 
 insert into basket_tickets values (18, 1);
  insert into basket_tickets values (18, 3);
   insert into basket_tickets values (18, 7);
    insert into basket_tickets values (18, 13);

SQL TO CHECK THAT AN EMPTY USER'S BASKET HAS BEEN CREATED
select 
    b.id basketId, 
    b.open basketOpen,
    u.roles,
    u.user_name,
    cd.city,
    cd.id contactDetailsId
 from Basket B
 inner join contact_details cd on cd.id = b.contact_details_id
 inner join user u on u.id = cd.user_id
 where u.id = 1

GET TICKETS IN A USER'S BASKET
 select 
    b.id basketId, 
    b.open basketOpen,
    u.roles,
    u.user_name,
    cd.city,
    t.num_units numTickets,
    t.start,
    t.destination dest
 from Basket B
 inner join basket_tickets bt on bt.basket_id = b.id
 inner join ticket t on bt.tickets_id = t.id
 inner join contact_details cd on cd.id = b.contact_details_id
 inner join user u on u.id = cd.user_id
 where u.id = 2
 
 INSERT CONTACT DETAILS FOR USER 1
 insert into contact_details values (
17, 'ad1', 'add2', 'add3', 'GHlasgow', 'countryV', 'dsf@sdf.com', 'fullnamneP', '987875', '765654', '435345', 'region', 'title', 1);

GET ALL TICKETS FOR BASKET 18
 select b.id basketId, t.*
 from Basket B
 inner join basket_tickets bt on bt.basket_id = b.id
 inner join ticket t on bt.tickets_id = t.id
 where b.id = 18
 
 INSERT A PAYMENT MNETHOD FOR USER 1
 insert into payment_method values(1, '1234132423412344', 2, '2022-10-04', 'Mr X Bloggs', '456', null, 1);
 
 GET ALL PAYMENT METHODS FOR USER 1
 select u.id as userId, pm.*
 from user u
 inner join payment_method pm on pm.user_id = u.id
 where u.id = 1
 
 INSERT AN ORDER
 insert into orders values(1, 1, '2019-10-04 09:39:20', 18, 1);
 
 FETCH ALL TICKETS
 select
    o.id orderId,
    o.purchased purchased,
    b.id basketId, 
    b.open basketOpen,
    u.roles,
    u.user_name,
    cd.city,
    t.num_units numTickets,
    t.start,
    t.destination dest,
    u.id userId
 from orders o
 inner join basket b on b.id = o.basket_id
 inner join basket_tickets bt on bt.basket_id = b.id
 inner join ticket t on bt.tickets_id = t.id
 inner join contact_details cd on cd.id = b.contact_details_id
 inner join user u on u.id = cd.user_id
 
 ========================================== 
 
logs:
https://www.tutorialspoint.com/log4j/log4j_logging_files.htm


//  REACT ROUTES: ==> http://localhost:8080/
	//  --> routeplanner/                home
    //  --> routeplanner/login           login attempt 		
	//  --> routeplanner/query           query page after successful login


Apply registration page
Add admin pages + permissions

========================================================================
 
 
  
 
 
 
  
 
 
 
 
 
 
 
 
 
 
 